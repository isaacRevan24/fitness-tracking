// Code generated by MockGen. DO NOT EDIT.
// Source: logic.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
	model "github.com/isaacRevan24/fitness-tracking/model"
)

// MockTrackingLogicInterface is a mock of TrackingLogicInterface interface.
type MockTrackingLogicInterface struct {
	ctrl     *gomock.Controller
	recorder *MockTrackingLogicInterfaceMockRecorder
}

// MockTrackingLogicInterfaceMockRecorder is the mock recorder for MockTrackingLogicInterface.
type MockTrackingLogicInterfaceMockRecorder struct {
	mock *MockTrackingLogicInterface
}

// NewMockTrackingLogicInterface creates a new mock instance.
func NewMockTrackingLogicInterface(ctrl *gomock.Controller) *MockTrackingLogicInterface {
	mock := &MockTrackingLogicInterface{ctrl: ctrl}
	mock.recorder = &MockTrackingLogicInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTrackingLogicInterface) EXPECT() *MockTrackingLogicInterfaceMockRecorder {
	return m.recorder
}

// AddWeightRegister mocks base method.
func (m *MockTrackingLogicInterface) AddWeightRegister(arg0 model.AddWeightRegisterReq) (uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddWeightRegister", arg0)
	ret0, _ := ret[0].(uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AddWeightRegister indicates an expected call of AddWeightRegister.
func (mr *MockTrackingLogicInterfaceMockRecorder) AddWeightRegister(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddWeightRegister", reflect.TypeOf((*MockTrackingLogicInterface)(nil).AddWeightRegister), arg0)
}
